{"version":3,"sources":["hooks/useFetch.ts","movieApi/resources/base.ts","movieApi/resources/discover.ts","movieApi/resources/search.ts","movieApi/resources/movies.ts","movieApi/index.ts","movieApi/movieApi.ts","helpers/currency-helper.ts","components/Rating/styles.ts","components/Rating/index.tsx","components/Loader/index.tsx","components/Suspense/index.tsx","pages/MovieDetail/styles.ts","pages/MovieDetail/index.tsx","pages/Home/styles.ts","context/movie.context.ts","hooks/useMovie.ts","components/Header/styles.ts","components/Search/styles.ts","components/Search/index.tsx","components/Header/index.tsx","components/SearchResults/styles.ts","components/MovieList/styles.ts","components/MovieCard/styles.ts","components/MovieCard/index.tsx","components/MovieList/index.tsx","helpers/ratings-ranges.ts","components/SearchResults/index.tsx","pages/Home/index.tsx","navigation/index.tsx","hooks/useMovieState.ts","hooks/useField.ts","providers/MovieProvider.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["States","useFetch","callback","initialValue","useState","IDLE","state","setState","data","setData","error","setError","useEffect","a","LOADING","response","FETCHED","ERROR","fetchData","Base","axiosInstance","resourceUrl","list","requestParams","url","params","rest","get","this","Discover","URLSearchParams","append","Search","query","Movies","id","movieApi","discover","search","movies","basicResponse","axios","create","baseURL","addResponseInterceptor","interceptors","request","use","process","addRequestInterceptor","config","headers","Authorization","currencyFormatter","Intl","NumberFormat","style","currency","sizes","small","normal","large","Start","styled","label","size","isSelected","StarRating","starts","rating","setRating","Array","map","_","index","onClick","rotate360","keyframes","Loader","div","Suspense","children","includes","className","GridContainer","image","Overlay","ImageContainer","Content","Title","h2","Tags","p","Rating","Tagline","h3","OverviewTitle","Overview","Tag","MovieDetail","useParams","useCallback","movieDetail","movie","backdrop_path","poster_path","release_date","tagline","overview","title","original_title","genres","status","budget","revenue","vote_average","releaseYear","moment","format","release","tags","name","join","alt","src","Wrapper","MovieContext","React","createContext","useMovie","useContext","BannerImage","h1","Subtitle","Form","form","SearchIcon","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ClearIcon","input","setQuery","value","onChange","reset","onSubmit","event","preventDefault","type","placeholder","undefined","Header","Filter","Grid","Empty","Date","MovieCard","imagePath","releaseDate","voteAverage","MovieList","header","onMovieClicked","emptyComponent","length","ranges","1","2","3","4","5","SearchResults","movieResults","results","filteredMovies","filter","min","max","Home","history","useHistory","goToMovieDetail","push","Navigation","basename","path","useMovieState","initial","setValue","target","useField","filterMovies","popularMovies","MovieProvider","movieState","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01bdcd34.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nexport enum States {\n  IDLE = 'IDLE',\n  LOADING = 'LOADING',\n  FETCHED = 'FETCHED',\n  ERROR = 'ERROR'\n}\n\nexport function useFetch<T>(\n  callback: () => Promise<T>,\n  initialValue: T\n): [T, States, unknown] {\n  const [state, setState] = useState<States>(States.IDLE);\n  const [data, setData] = useState(initialValue);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setState(States.LOADING);\n        const response = await callback();\n        setData(response);\n        setState(States.FETCHED);\n      } catch (errorCatched) {\n        setState(States.ERROR);\n        setError(errorCatched);\n      }\n    };\n    fetchData();\n  }, [callback]);\n\n  return [data, state, error];\n}\n","import { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\n\n/**\n * Base service for http request.\n * @author Daniel Mejia\n * @class Base\n */\nexport class Base {\n  /**\n   * The axios instance to make http request.\n   * @type { AxiosInstance }\n   */\n  axiosInstance: AxiosInstance;\n\n  /**\n   * The default resourceUrl to get values.\n   * @type { String }\n   */\n  resourceUrl!: string;\n\n  /**\n   * Creates an instance of Base.\n   */\n  constructor(axiosInstance: AxiosInstance) {\n    this.axiosInstance = axiosInstance;\n  }\n\n  /**\n   * Make a get request.\n   * @param { AxiosRequestConfig } [requestParams=this.defaultParams] The params to make the request.\n   * @return { Promise<any> } The data promise.\n   */\n  list = <T>(requestParams: AxiosRequestConfig): Promise<T> => {\n    const { url = this.resourceUrl, params, ...rest } = requestParams;\n    return this.axiosInstance.get<T, T>(url, { params, ...rest });\n  };\n}\n\nexport default Base;\n","// Depedencies\nimport Base from './base';\nimport { MoviesResults } from '../../interfaces/MovieResults';\n\n/**\n * Discover resource.\n * @author Daniel Mejia\n * @class Discover\n */\nexport class Discover extends Base {\n  /**\n   * Resource url.\n   * @type { string }\n   */\n  resourceUrl = 'discover';\n\n  /**\n   * Gets the popular movies in the api.\n   * @returns {Promise<MoviesResults>} The popular movies.\n   */\n  popularMovies(): Promise<MoviesResults> {\n    const params = new URLSearchParams();\n    params.append('sort_by', 'popularity.desc');\n\n    return this.list<MoviesResults>({\n      url: `${this.resourceUrl}/movie`,\n      params\n    });\n  }\n}\n\nexport default Discover;\n","// Depedencies\nimport Base from './base';\nimport { MoviesResults } from '../../interfaces/MovieResults';\n\n/**\n * Search resource.\n * @author Daniel Mejia\n * @class Search\n */\nexport class Search extends Base {\n  /**\n   * Resource url.\n   * @type { string }\n   */\n  resourceUrl = 'search';\n\n  /**\n   * Filter movies by given query text.\n   * @param {string} query The query text to filter.\n   * @returns {Promise<MoviesResults>} The movie results.\n   */\n  filterMovies(query: string): Promise<MoviesResults> {\n    const params = new URLSearchParams();\n    params.append('query', query);\n\n    return this.list<MoviesResults>({\n      url: `${this.resourceUrl}/movie`,\n      params\n    });\n  }\n}\n\nexport default Search;\n","// Depedencies\nimport Base from './base';\nimport { Movie } from '../../interfaces/Movie';\n\n/**\n * Movies resource.\n * @author Daniel Mejia\n * @class Movies\n */\nexport class Movies extends Base {\n  /**\n   * Resource url.\n   * @type { string }\n   */\n  resourceUrl = 'movie';\n\n  /**\n   * Gets the movie detail.\n   * @param {number} id The movie identifier.\n   * @returns {Promise<Movie>} The movie detail.\n   */\n  movieDetail(id: number): Promise<Movie> {\n    return this.list<Movie>({\n      url: `${this.resourceUrl}/${id}`\n    });\n  }\n}\n\nexport default Movies;\n","import { AxiosRequestConfig } from 'axios';\nimport MovieApi from './movieApi';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nfunction configureGlobalAuthToken(config: AxiosRequestConfig) {\n  const { REACT_APP_TOKEN_MOVIE } = process.env;\n  config.headers = {\n    Authorization: `Bearer ${REACT_APP_TOKEN_MOVIE}`\n  };\n  return config;\n}\n\nconst movieApi = new MovieApi(\n  REACT_APP_BASE_URL as string\n).addRequestInterceptor(configureGlobalAuthToken);\n\nexport default movieApi;\n","// Depedencies\nimport axios, { AxiosInstance, AxiosResponse, AxiosRequestConfig } from 'axios';\nimport Discover from './resources/discover';\nimport Search from './resources/search';\nimport Movies from './resources/movies';\n\n/**\n * Movie service for API connection.\n * @author Daniel Mejia\n * @class MovieApi\n */\nexport class MovieApi {\n  axiosInstance: AxiosInstance;\n  discover: Discover;\n  search: Search;\n  movies: Movies;\n\n  constructor(url: string) {\n    this.axiosInstance = axios.create({ baseURL: url });\n    this.addResponseInterceptor(this.basicResponse);\n\n    this.discover = new Discover(this.axiosInstance);\n    this.search = new Search(this.axiosInstance);\n    this.movies = new Movies(this.axiosInstance);\n  }\n\n  /**\n   * Add a request interceptor for client.\n   * @param { Function } callback The callback to add.\n   * @returns { MovieApi } The client itself.\n   */\n  addRequestInterceptor(\n    callback: (request: AxiosRequestConfig) => AxiosRequestConfig\n  ): MovieApi {\n    const { interceptors } = this.axiosInstance;\n    interceptors.request.use(callback);\n    return this;\n  }\n\n  /**\n   * Add a response interceptor for client.\n   * @param { Function } callback The callback to add.\n   * @returns { MovieApi } The client itself.\n   */\n  addResponseInterceptor<T>(\n    callback: (\n      value: AxiosResponse<T>\n    ) => AxiosResponse<T> | Promise<AxiosResponse<T>>\n  ): MovieApi {\n    const { interceptors } = this.axiosInstance;\n    interceptors.response.use(callback);\n    return this;\n  }\n\n  /**\n   * Intercepts every response.\n   * @param { AxiosResponse } response The response.\n   * @returns { AxiosResponse.data } The new response parsed.\n   */\n  basicResponse = <T>(response: AxiosResponse<T>): AxiosResponse['data'] =>\n    response.data;\n}\n\nexport default MovieApi;\n","export const currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n","import styled from 'styled-components';\n\nexport const sizes = {\n  small: 1,\n  normal: 1.5,\n  large: 2\n};\n\nexport const Start = styled.label<{\n  isSelected: boolean;\n  size: keyof typeof sizes;\n}>`\n  display: inline-block;\n  padding: 4px 4px 4px 0;\n  vertical-align: middle;\n  line-height: 1;\n  font-size: ${({ size }) => sizes[size]}em;\n  color: ${({ isSelected }) => (isSelected ? '#ffd700' : '#ababab')};\n  transition: color 0.2s ease-out;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { Rating } from '../../helpers/ratings-ranges';\nimport { Start, sizes } from './styles';\n\ninterface StarRatingProps {\n  starts?: number;\n  rating?: number;\n  size?: keyof typeof sizes;\n  setRating?(rating: Rating): void;\n}\n\nfunction StarRating({\n  starts = 5,\n  rating = 0,\n  size = 'normal',\n  setRating\n}: StarRatingProps): JSX.Element {\n  return (\n    <>\n      {[...Array(starts)].map((_, index) => (\n        <Start\n          key={index}\n          size={size}\n          isSelected={rating >= index + 1}\n          onClick={() => setRating?.((index + 1) as Rating)}\n        >\n          ★\n        </Start>\n      ))}\n    </>\n  );\n}\n\nexport default StarRating;\n","import styled, { keyframes } from 'styled-components';\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Loader = styled.div`\n  animation: ${rotate360} 1s linear infinite;\n  transform: translateZ(0);\n\n  border-top: 2px solid grey;\n  border-right: 2px solid grey;\n  border-bottom: 2px solid grey;\n  border-left: 4px solid black;\n  background: transparent;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport default Loader;\n","import React from 'react';\nimport { States } from '../../hooks/useFetch';\nimport Loader from '../Loader';\n\ninterface SuspenseProps {\n  state: States;\n  children: React.ReactNode;\n}\n\nfunction Suspense({ state, children }: SuspenseProps): JSX.Element {\n  if ([States.IDLE, States.LOADING].includes(state)) {\n    return <Loader />;\n  }\n\n  if (States.ERROR === state) {\n    return <h2 className=\"center\">Something went wrong...</h2>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Suspense;\n","import styled from 'styled-components';\n\nexport const GridContainer = styled.div<{ image: string }>`\n  background-image: url(${({ image }) => image});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: top center;\n  color: white;\n`;\n\nexport const Overlay = styled.div`\n  padding: 40px;\n  background-color: rgb(0, 0, 0, 0.8);\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  & > div {\n    margin: 20px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n\n  img {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport const Content = styled.div`\n  flex: 1;\n`;\n\nexport const Title = styled.h2`\n  margin: 0px;\n  font-size: 2.2rem;\n  font-weight: 700;\n`;\n\nexport const Tags = styled.p`\n  margin-top: 0px;\n`;\n\nexport const Rating = styled.div`\n  display: flex;\n  align-items: center;\n\n  label {\n    padding-left: 0px;\n  }\n\n  span {\n    font-size: 1.2em;\n  }\n`;\n\nexport const Tagline = styled.h3`\n  margin-bottom: 0;\n  font-size: 1.1em;\n  font-weight: 400;\n  font-style: italic;\n  opacity: 0.7;\n`;\n\nexport const OverviewTitle = styled.h2`\n  margin: 20px 0 8px 0;\n`;\n\nexport const Overview = styled.p`\n  margin: 0px;\n`;\n\nexport const Tag = styled.p`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useCallback } from 'react';\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks/useFetch';\nimport movieApi from '../../movieApi';\nimport { Movie } from '../../interfaces/Movie';\nimport { currencyFormatter } from '../../helpers/currency-helper';\nimport StarRating from '../../components/Rating';\nimport Suspense from '../../components/Suspense';\nimport {\n  GridContainer,\n  Overlay,\n  ImageContainer,\n  Content,\n  Title,\n  Tags,\n  Tagline,\n  Rating,\n  OverviewTitle,\n  Overview,\n  Tag\n} from './styles';\n\nfunction MovieDetail(): JSX.Element {\n  const { id } = useParams<{ id: string }>();\n  const getMovieDetail = useCallback(() => movieApi.movies.movieDetail(+id), [\n    id\n  ]);\n  const [movie, state] = useFetch(getMovieDetail, {} as Movie);\n  const {\n    backdrop_path,\n    poster_path,\n    release_date,\n    tagline,\n    overview,\n    title,\n    original_title,\n    genres,\n    status,\n    budget,\n    revenue,\n    vote_average\n  } = movie;\n  const releaseYear = moment(release_date).format('YYYY');\n  const release = moment(release_date).format('MM/DD/YYYY');\n  const tags = genres?.map(({ name }) => name).join(', ');\n\n  return (\n    <Suspense state={state}>\n      <GridContainer image={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}>\n        <Overlay>\n          <ImageContainer>\n            <img\n              alt=\"poster\"\n              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            />\n          </ImageContainer>\n          <Content>\n            <Title>{`${title} (${releaseYear})`}</Title>\n            <Tags>{`${release} ${tags}`}</Tags>\n            <Rating>\n              <StarRating starts={1} rating={1} size=\"large\" />\n              <span>{vote_average}</span>\n            </Rating>\n            <Tagline>{tagline}</Tagline>\n            <OverviewTitle>Overview</OverviewTitle>\n            <Overview>{overview}</Overview>\n            <Tag>\n              <strong>Original Title</strong>\n              {original_title}\n            </Tag>\n            <Tag>\n              <strong>Status</strong>\n              {status}\n            </Tag>\n            <Tag>\n              <strong>Budget</strong>\n              {budget ? currencyFormatter.format(budget) : '-'}\n            </Tag>\n            <Tag>\n              <strong>Revenue</strong>\n              {revenue ? currencyFormatter.format(revenue) : '-'}\n            </Tag>\n          </Content>\n        </Overlay>\n      </GridContainer>\n    </Suspense>\n  );\n}\n\nexport default MovieDetail;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 40px 60px;\n`;\n","// Dependencies\nimport React from 'react';\nimport { Rating } from '../helpers/ratings-ranges';\nimport { States } from '../hooks/useFetch';\nimport { Field } from '../hooks/useField';\nimport { MoviesResults } from '../interfaces/MovieResults';\n\nexport interface MovieContext {\n  movieResults: MoviesResults;\n  state: States;\n  error: unknown;\n  input: Field;\n  query?: string;\n  setQuery: (query?: string) => void;\n  setRating: (rating?: Rating) => void;\n  rating?: Rating;\n}\n\nexport const MovieContext = React.createContext({} as MovieContext);\n","// Dependencies\nimport React from 'react';\nimport { MovieContext } from '../context/movie.context';\n\nexport function useMovie(): MovieContext {\n  return React.useContext(MovieContext);\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: rgb(0, 0, 0, 0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 400px;\n`;\n\nexport const BannerImage = styled.div`\n  background-image: url('https://mauiwatch.com/wp-content/uploads/2019/10/9D9FFEEF-96E9-4C70-88C8-2F8F92FC4CE2.jpeg');\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: top center;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-weight: bold;\n  font-size: 3em;\n  margin-bottom: 0px;\n  color: white;\n`;\n\nexport const Subtitle = styled.h2`\n  text-align: center;\n  font-weight: normal;\n  color: white;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n\n  input {\n    width: 50%;\n    padding: 12px 36px;\n    background-color: transparent;\n    transition: transform 250ms ease-in-out;\n    font-size: 0.9em;\n    color: white;\n    border-radius: 50px;\n    border: 1px solid white;\n    transition: all 250ms ease-in-out;\n    backface-visibility: hidden;\n    transform-style: preserve-3d;\n\n    &::placeholder {\n      color: white;\n    }\n\n    &:hover,\n    &:focus {\n      padding: 12px 38px;\n      outline: 0;\n      border: 1px solid transparent;\n      border-bottom: 1px solid white;\n      border-radius: 0;\n    }\n  }\n\n  svg {\n    margin-top: 3px;\n    width: 20px;\n    height: 20px;\n    cursor: pointer;\n    color: white;\n  }\n\n  .clear {\n    z-index: 1;\n    margin-left: -30px;\n  }\n\n  button {\n    z-index: 1;\n    margin-right: -30px;\n    background: none;\n    color: inherit;\n    border: none;\n    padding: 0;\n    font: inherit;\n    cursor: pointer;\n    outline: inherit;\n  }\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { useMovie } from '../../hooks/useMovie';\nimport { Form } from './styles';\n\ninterface IconProps {\n  className?: string;\n  onClick?: () => void;\n}\n\nfunction SearchIcon({ className }: IconProps): JSX.Element {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      className={className}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n      />\n    </svg>\n  );\n}\n\nfunction ClearIcon({ className, onClick }: IconProps): JSX.Element {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      className={className}\n      onClick={onClick}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M6 18L18 6M6 6l12 12\"\n      />\n    </svg>\n  );\n}\n\nfunction Search(): JSX.Element {\n  const { input, setQuery } = useMovie();\n  const { value, onChange, reset } = input;\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setQuery(value);\n  };\n  const clearSearch = () => {\n    setQuery(undefined);\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <button type=\"submit\">\n        <SearchIcon />\n      </button>\n      <input\n        placeholder=\"Search for a movie\"\n        value={value}\n        onChange={onChange}\n      />\n      {value && <ClearIcon className=\"clear\" onClick={clearSearch} />}\n    </Form>\n  );\n}\n\nexport default Search;\n","import React from 'react';\nimport { BannerImage, Wrapper, Title, Subtitle } from './styles';\nimport Search from '../Search';\n\nfunction Header(): JSX.Element {\n  return (\n    <BannerImage>\n      <Wrapper>\n        <Title>Your favorite movies. Explained</Title>\n        <Subtitle>Figure out what happened. Then find out why</Subtitle>\n        <Search />\n      </Wrapper>\n    </BannerImage>\n  );\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Filter = styled.div`\n  margin-bottom: 20px;\n\n  h2 {\n    margin-top: 0px;\n  }\n\n  h3 {\n    margin: 0px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  justify-content: flex-start;\n  grid-gap: 20px;\n`;\n\nexport const Empty = styled.div`\n  margin: auto;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const ImageContainer = styled.div`\n  cursor: pointer;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  width: 100%;\n  min-height: 250px;\n  height: 250px;\n  background: #dbdbdb;\n  overflow: hidden;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const Content = styled.div`\n  cursor: pointer;\n  position: relative;\n  margin-left: 5px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1em;\n  margin-top: 20px;\n  margin-bottom: 0px;\n  font-weight: 700;\n`;\n\nexport const Date = styled.p`\n  font-size: 1em;\n  margin: 0;\n  padding: 0;\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: -45px;\n  color: white;\n  padding: 6px;\n  border-radius: 40px;\n  background-color: rgb(0, 0, 0, 0.7);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n\n  p {\n    margin: 0px;\n    margin-top: -5px;\n    font-size: 0.8em;\n  }\n`;\n","import React from 'react';\nimport moment from 'moment';\nimport StarRating from '../Rating';\nimport { ImageContainer, Title, Date, Content, Rating } from './styles';\n\ninterface MovieCardProps {\n  onClick: () => void;\n  title: string;\n  releaseDate: string;\n  imagePath?: string;\n  voteAverage: number;\n}\n\nfunction MovieCard({\n  title,\n  imagePath,\n  releaseDate,\n  voteAverage,\n  onClick\n}: MovieCardProps): JSX.Element {\n  return (\n    <div>\n      <ImageContainer onClick={onClick}>\n        {imagePath && (\n          <img\n            alt=\"poster\"\n            src={`https://image.tmdb.org/t/p/w500/${imagePath}`}\n          />\n        )}\n      </ImageContainer>\n      <Content onClick={onClick}>\n        <Rating>\n          <StarRating starts={1} rating={1} size=\"small\" />\n          <p>{voteAverage}</p>\n        </Rating>\n        <Title>{title}</Title>\n        <Date>{moment(releaseDate).format('MMM DD, YYYY')}</Date>\n      </Content>\n    </div>\n  );\n}\n\nexport default MovieCard;\n","import React from 'react';\nimport { Grid, Empty } from './styles';\nimport { Movie } from '../../interfaces/Movie';\nimport MovieCard from '../../components/MovieCard';\n\ninterface MovieListProps {\n  header: React.ReactNode;\n  onMovieClicked: (movie: Movie) => void;\n  movies?: Movie[];\n  emptyComponent?: React.ReactNode;\n}\n\nfunction MovieList({\n  header,\n  onMovieClicked,\n  movies = [],\n  emptyComponent\n}: MovieListProps): JSX.Element {\n  return (\n    <div>\n      {header}\n      {movies.length === 0 && <Empty>{emptyComponent}</Empty>}\n      <Grid>\n        {movies.map((movie) => (\n          <MovieCard\n            key={movie.id}\n            onClick={() => onMovieClicked(movie)}\n            title={movie.title}\n            imagePath={movie.poster_path}\n            releaseDate={movie.release_date}\n            voteAverage={movie.vote_average}\n          />\n        ))}\n      </Grid>\n    </div>\n  );\n}\nexport default MovieList;\n","export const ranges = {\n  1: [0, 2],\n  2: [2, 4],\n  3: [4, 6],\n  4: [6, 8],\n  5: [8, 10]\n};\n\nexport type Rating = keyof typeof ranges;\n","import React from 'react';\nimport { Filter } from './styles';\nimport { useMovie } from '../../hooks/useMovie';\nimport { Movie } from '../../interfaces/Movie';\nimport MovieList from '../MovieList';\nimport Rating from '../Rating';\nimport { ranges } from '../../helpers/ratings-ranges';\n\ninterface SearchResultsProps {\n  onMovieClicked: (movie: Movie) => void;\n}\n\nfunction SearchResults({ onMovieClicked }: SearchResultsProps): JSX.Element {\n  const { movieResults, query, rating, setRating } = useMovie();\n  const { results } = movieResults;\n  const filteredMovies = results?.filter(({ vote_average }) => {\n    if (rating) {\n      const [min, max] = ranges[rating];\n      return vote_average >= min && vote_average <= max;\n    }\n\n    return true;\n  });\n\n  return (\n    <MovieList\n      header={\n        <Filter>\n          <h2>{`Search results for: ${query}`}</h2>\n          <h3>Rating:</h3>\n          <Rating rating={rating} setRating={setRating} />\n        </Filter>\n      }\n      movies={filteredMovies}\n      onMovieClicked={onMovieClicked}\n      emptyComponent={<h2>There are no results for your search</h2>}\n    />\n  );\n}\n\nexport default SearchResults;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Wrapper } from './styles';\nimport { useMovie } from '../../hooks/useMovie';\nimport { Movie } from '../../interfaces/Movie';\nimport Header from '../../components/Header';\nimport SearchResults from '../../components/SearchResults';\nimport MovieList from '../../components/MovieList';\nimport Suspense from '../../components/Suspense';\n\nfunction Home(): JSX.Element {\n  const history = useHistory();\n  const goToMovieDetail = ({ id }: Movie) => history.push(`movieDetail/${id}`);\n  const {\n    movieResults: { results },\n    state,\n    query\n  } = useMovie();\n\n  return (\n    <div>\n      <Header />\n      <Wrapper>\n        <Suspense state={state}>\n          {query ? (\n            <SearchResults onMovieClicked={goToMovieDetail} />\n          ) : (\n            <MovieList\n              header={<h2>Most popular</h2>}\n              movies={results}\n              onMovieClicked={goToMovieDetail}\n              emptyComponent={<h3>There are no popular movies</h3>}\n            />\n          )}\n        </Suspense>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\n// Pages\nimport MovieDetail from '../pages/MovieDetail';\nimport Home from '../pages/Home';\n\nfunction Navigation(): JSX.Element {\n  const { PUBLIC_URL } = process.env;\n\n  return (\n    <Router basename={PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/movieDetail/:id\">\n          <MovieDetail />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Navigation;\n","// Dependencies\nimport { useCallback, useRef, useState } from 'react';\nimport { MovieContext } from '../context/movie.context';\nimport { Rating } from '../helpers/ratings-ranges';\nimport { useFetch } from '../hooks/useFetch';\nimport { useField } from './useField';\nimport movieApi from '../movieApi';\n\nexport function useMovieState(): MovieContext {\n  const input = useField();\n  const [query, setQuery] = useState<undefined | string>();\n  const [rating, setRating] = useState<undefined | Rating>();\n\n  const fetchResults = useCallback(() => {\n    setRating(undefined);\n    if (query) {\n      return movieApi.search.filterMovies(query);\n    }\n\n    return movieApi.discover.popularMovies();\n  }, [query]);\n\n  const [movieResults, state, error] = useFetch(fetchResults, {});\n\n  return {\n    movieResults,\n    state,\n    error,\n    input,\n    query,\n    setQuery,\n    setRating,\n    rating\n  };\n}\n","import { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\nexport interface Field {\n  value?: string;\n  onChange: (value?: string | React.ChangeEvent<HTMLInputElement>) => void;\n  reset: () => void;\n  setValue: Dispatch<SetStateAction<string>>;\n}\n\nexport function useField(initial = ''): Field {\n  const [value, setValue] = useState<string>(initial);\n  const onChange = useCallback(({ target }) => setValue(target?.value), []);\n  const reset = useCallback(() => setValue(initial), [initial]);\n\n  return { value, onChange, reset, setValue };\n}\n","// Dependencies\nimport React from 'react';\nimport { MovieContext } from '../context/movie.context';\nimport { useMovieState } from '../hooks/useMovieState';\n\nexport interface MovieProviderProps {\n  children: React.ReactNode;\n}\n\nfunction MovieProvider({ children }: MovieProviderProps): JSX.Element {\n  const movieState = useMovieState();\n\n  return (\n    <MovieContext.Provider value={movieState}>{children}</MovieContext.Provider>\n  );\n}\n\nexport default MovieProvider;\n","import React from 'react';\nimport './App.css';\n\nimport Navigation from './navigation';\nimport MovieProvider from './providers/MovieProvider';\n\nfunction App(): JSX.Element {\n  return (\n    <MovieProvider>\n      <Navigation />\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}